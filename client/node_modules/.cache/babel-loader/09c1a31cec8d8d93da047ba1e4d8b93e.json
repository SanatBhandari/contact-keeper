{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sbhandari\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contactContext';\nimport Spinner from '../layout/Spinner';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const contacts = contactContext.contacts,\n        filtered = contactContext.filtered,\n        getContacts = contactContext.getContacts,\n        loading = contactContext.loading;\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line\n  }, []);\n\n  if (contacts != null && contacts.length === 0 && !loading) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, contacts !== null && !loading ? React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, filtered !== null ? filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))) : contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ContactItem, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })))) : React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:\\Users\\sbhandari\\Desktop\\contact-keeper\\client\\src\\components\\contacts\\Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGR,UAAU,CAACK,cAAD,CAAjC;AADqB,QAGbI,QAHa,GAGgCD,cAHhC,CAGbC,QAHa;AAAA,QAGHC,QAHG,GAGgCF,cAHhC,CAGHE,QAHG;AAAA,QAGOC,WAHP,GAGgCH,cAHhC,CAGOG,WAHP;AAAA,QAGoBC,OAHpB,GAGgCJ,cAHhC,CAGoBI,OAHpB;AAKrBX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACI,MAAT,KAAoB,CAAxC,IAA6C,CAACD,OAAlD,EAA2D;AACzD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,GACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADH,GAUGN,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAClB,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CAXN,CADD,GAuBC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,CADF;AA6BD,CA3CD;;AA6CA,eAAeR,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactItem from './ContactItem';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const { contacts, filtered, getContacts, loading } = contactContext;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (contacts != null && contacts.length === 0 && !loading) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null && !loading ? (\r\n        <TransitionGroup>\r\n          {filtered !== null\r\n            ? filtered.map(contact => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames='alert'\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))\r\n            : contacts.map(contact => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames='alert'\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}