{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sbhandari\\\\Desktop\\\\contact-keeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\sbhandari\\\\Desktop\\\\contact-keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react'; // import axios from 'axios';\n\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../Types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sara Watson',\n      email: 'sara@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Harry White',\n      email: 'harry@gmail.com',\n      phone: '333-333-3333',\n      type: 'professional'\n    }],\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Add Contact\n\n\n  const addContact = async contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    }); // const config = {\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   }\n    // };\n    // try {\n    //   const res = await axios.get('/api/contacts', contact, config);\n    //   dispatch({ type: ADD_CONTACT, payload: res.data });\n    // } catch (err) {\n    //   dispatch({ type: CONTACT_ERROR, payload: err.value });\n    // }\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:\\Users\\sbhandari\\Desktop\\contact-keeper\\client\\src\\context\\contact\\ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","error","state","dispatch","addContact","contact","v4","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\n// import axios from 'axios';\r\nimport uuid from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR\r\n} from '../Types';\r\n\r\nconst ContactState = props => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: 'Jill Johnson',\r\n        email: 'jill@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'personal'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Sara Watson',\r\n        email: 'sara@gmail.com',\r\n        phone: '222-222-2222',\r\n        type: 'personal'\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Harry White',\r\n        email: 'harry@gmail.com',\r\n        phone: '333-333-3333',\r\n        type: 'professional'\r\n      }\r\n    ],\r\n    current: null,\r\n    filtered: null,\r\n    error: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Add Contact\r\n  const addContact = async contact => {\r\n    contact.id = uuid.v4();\r\n    dispatch({ type: ADD_CONTACT, payload: contact });\r\n    // const config = {\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json'\r\n    //   }\r\n    // };\r\n\r\n    // try {\r\n    //   const res = await axios.get('/api/contacts', contact, config);\r\n    //   dispatch({ type: ADD_CONTACT, payload: res.data });\r\n    // } catch (err) {\r\n    //   dispatch({ type: CONTACT_ERROR, payload: err.value });\r\n    // }\r\n  };\r\n\r\n  // Delete Contact\r\n  const deleteContact = id => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n\r\n  // Set Current Contact\r\n  const setCurrent = contact => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  // Clear Current Contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // Update Contact\r\n  const updateContact = contact => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n\r\n  // Filter Contact\r\n  const filterContacts = text => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n\r\n  // Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}